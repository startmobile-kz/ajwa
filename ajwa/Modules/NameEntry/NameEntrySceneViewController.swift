//
//  NameEntrySceneViewController.swift
//  ajwa
//
//  Created by ti1ek on 20.08.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NameEntrySceneDisplayLogic: AnyObject {
    func displaySomething(viewModel: NameEntryScene.Something.ViewModel)
}

final class NameEntrySceneViewController: UIViewController, NameEntrySceneDisplayLogic {
    var interactor: NameEntrySceneBusinessLogic?
    var router: (NSObjectProtocol & NameEntrySceneRoutingLogic & NameEntrySceneDataPassing)?
    
    // MARK: - Outlets
    private lazy var nameEnterStackView: UIStackView = {
        let stackView = UIStackView()
        stackView.axis = .vertical
        stackView.spacing = 15
        return stackView
    }()
    
    private lazy var nameTextLabel: UILabel = {
        let label = UILabel()
        label.textColor = AppColor.black.uiColor
        label.textAlignment = .left
        label.font = AppFont.regular.s20()
        label.text = "Имя"
        return label
    }()
    
    private lazy var nameDetailsContainerView: UIView = {
        let view = UIView()
        view.backgroundColor = AppColor.celeste.uiColor
        view.layer.cornerRadius = 5
        return view
    }()
    
    private lazy var nameEnterTextField: UITextField = {
        let textField = UITextField()
        textField.attributedPlaceholder = NSAttributedString(
            string: "Введите имя",
            attributes: [NSAttributedString.Key.foregroundColor: AppColor.blue.uiColor,
                         NSAttributedString.Key.font: AppFont.regular.s16()
                        ]
        )
        textField.textColor = .black
        textField.autocapitalizationType = .sentences
        textField.keyboardType = .namePhonePad
        textField.autocorrectionType = .no
        return textField
    }()
    
    private lazy var continueButton: UIButton = {
        let button = UIButton(type: .system)
        button.titleLabel?.font = AppFont.medium.s18()
        button.setTitle("Зарегистрироваться", for: .normal)
        button.backgroundColor = AppColor.blue.uiColor
        button.setTitleColor(AppColor.white.uiColor, for: .normal)
        button.layer.cornerRadius = 22
        button.addTarget(self, action: #selector(continueDidTap), for: .touchUpInside)
        return button
    }()
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
        
        setupUI()
        setupConstraints()
    }
    
    override var supportedInterfaceOrientations: UIInterfaceOrientationMask {
        .portrait
    }
    
    override var shouldAutorotate: Bool {
        false
    }
    
    // MARK: - UI Setup
    private func setupUI() {
        view.backgroundColor = .white
        
        view.addSubview(nameEnterStackView)
        nameEnterStackView.addArrangedSubview(nameTextLabel)
        nameEnterStackView.addArrangedSubview(nameDetailsContainerView)
        nameDetailsContainerView.addSubview(nameEnterTextField)
        view.addSubview(continueButton)
    }
    
    // MARK: - Constraints Setup
    private func setupConstraints() {
        
        nameEnterStackView.snp.makeConstraints { make in
            make.top.equalToSuperview().offset(317)
            make.leading.equalToSuperview().offset(20)
            make.trailing.equalToSuperview().inset(20)
        }
        
        nameEnterTextField.snp.makeConstraints { make in
            make.leading.equalToSuperview().offset(20)
            make.top.bottom.equalToSuperview().inset(15)
        }
        
        continueButton.snp.makeConstraints { make in
            make.bottom.equalTo(view.safeAreaLayoutGuide.snp.bottomMargin).inset(15)
            make.leading.equalToSuperview().offset(10)
            make.trailing.equalToSuperview().inset(10)
            make.height.equalTo(55)
        }
    }
    
    // MARK: - Actions
    @objc func continueDidTap() {
    }
    
    // MARK: Do something
    func doSomething() {
        let request = NameEntryScene.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: NameEntryScene.Something.ViewModel) {
    }
}
