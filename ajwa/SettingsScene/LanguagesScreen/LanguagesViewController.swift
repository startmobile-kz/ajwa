//
//  LanguagesViewController.swift
//  ajwa
//
//  Created by Aisaule Sibatova on 16.08.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SnapKit

protocol LanguagesDisplayLogic: AnyObject
{
  func displaySomething(viewModel: [Languages.Something.ViewModel])
}

class LanguagesViewController: UIViewController, LanguagesDisplayLogic
{
  var interactor: LanguagesBusinessLogic?
  var router: (NSObjectProtocol & LanguagesRoutingLogic & LanguagesDataPassing)?
  var languages = [Languages.Something.ViewModel]()
    var previouslySelectedIndexPath: IndexPath?

  private lazy var tableView: UITableView = {
      let tableView = UITableView(frame: .init(x: 9, y: 9, width: self.view.frame.width, height: 324), style: .insetGrouped)
  tableView.register(LanguageTypeCell.self, forCellReuseIdentifier: LanguageTypeCell.identifier)
      tableView.dataSource = self
      tableView.delegate = self
    return tableView
  }()
    

    
  // MARK: View lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        LanguagesConfigurator.shared.configure(viewController: self)
    }
    
    required init?(coder: NSCoder) {
        super.init(coder: coder)
        LanguagesConfigurator.shared.configure(viewController: self)
    }
    

  override func viewDidLoad()
  {
    super.viewDidLoad()
      setupHierarchy()
      setupLayout()
      doSomething()
  }
    
    private func setupHierarchy() {
        view.addSubview(tableView)
    }
    
    private func setupLayout() {
        
        tableView.snp.makeConstraints {make in
            make.edges.equalTo(view)
        }
    }
  
  // MARK: Do something
  
  func doSomething()
  {
//      let request = [Languages]()
    interactor?.doSomething()
  }
  
  func displaySomething(viewModel: [Languages.Something.ViewModel]) {
      viewModel.enumerated().forEach { iterator in
          if iterator.element.isSelected {
              previouslySelectedIndexPath = IndexPath(row: 0, section: iterator.offset)
          }
      }
      languages.append(contentsOf: viewModel)
      tableView.reloadData()
  }
}
